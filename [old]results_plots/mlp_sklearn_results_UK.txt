Best auc_score on train set: 0.974
Best parameter set: {'clf__activation': 'relu', 'clf__alpha': 0.01, 'clf__batch_size': 'auto', 'clf__hidden_layer_sizes': (64, 32, 1), 'clf__learning_rate': 'adaptive', 'clf__learning_rate_init': 0.01, 'clf__momentum': 0.8, 'clf__solver': 'adam', 'preprocessing__categorical__base_encoder': OrdinalEncoder(categories=[[False, True], ['1', '2'], ['1', '2', '3', '4', '5'],
                           ['1', '2'], ['1', '2'], ['1', '2', '3', '4'],
                           ['1', '2'],
                           ['1', '10', '11', '12', '13', '14', '15', '16', '17',
                            '18', '19', '2', '20', '21', '22', '23', '24', '25',
                            '26', '27', '3', '4', '5', '6', '7', '8', '9']],
               dtype=<class 'numpy.float64'>), 'preprocessing__categorical__encoder': OneHotEncoder(categories='auto', drop=None, dtype=<class 'numpy.float64'>,
              handle_unknown='error', sparse=True), 'preprocessing__numerical__highVifDropper': 'passthrough', 'preprocessing__numerical__scaler': StandardScaler(copy=True, with_mean=True, with_std=True)}
Best scores index: 75
Scores for train set:               precision    recall  f1-score   support

       False       1.00      0.97      0.99     23040
        True       0.97      1.00      0.98     18432

    accuracy                           0.98     41472
   macro avg       0.98      0.99      0.98     41472
weighted avg       0.98      0.98      0.98     41472
Nested Scores: nan

Scores for test set:               precision    recall  f1-score   support

       False       0.99      0.96      0.97      5760
        True       0.38      0.66      0.49       240

    accuracy                           0.94      6000
   macro avg       0.68      0.81      0.73      6000
weighted avg       0.96      0.94      0.95      6000

f1 score on test set: 0.486
fbeta_score on test set: 0.618
AUC of test set: 0.809
Accuracy of test set: 0.944
Precision of test set: 0.384
Recall of test set: 0.662
